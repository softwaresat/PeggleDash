#include "Ball.h"
#include "GameObject.h"
#include <cstdint>
#include <iostream>

const int32_t angleTable[256][2] = {
    { 1024,    0}, { 1024,   25}, { 1023,   50}, { 1021,   75}, { 1019,  100}, { 1016,  125}, { 1013,  150}, { 1009,  175},
    { 1004,  200}, {  999,  224}, {  993,  249}, {  987,  273}, {  980,  297}, {  972,  321}, {  964,  345}, {  955,  369},
    {  946,  392}, {  936,  415}, {  926,  438}, {  915,  460}, {  903,  483}, {  891,  505}, {  878,  526}, {  865,  548},
    {  851,  569}, {  837,  590}, {  822,  610}, {  807,  630}, {  792,  650}, {  775,  669}, {  759,  688}, {  742,  706},
    {  724,  724}, {  706,  742}, {  688,  759}, {  669,  775}, {  650,  792}, {  630,  807}, {  610,  822}, {  590,  837},
    {  569,  851}, {  548,  865}, {  526,  878}, {  505,  891}, {  483,  903}, {  460,  915}, {  438,  926}, {  415,  936},
    {  392,  946}, {  369,  955}, {  345,  964}, {  321,  972}, {  297,  980}, {  273,  987}, {  249,  993}, {  224,  999},
    {  200, 1004}, {  175, 1009}, {  150, 1013}, {  125, 1016}, {  100, 1019}, {   75, 1021}, {   50, 1023}, {   25, 1024},
    {   0, 1024}, {  -25, 1024}, {  -50, 1023}, {  -75, 1021}, {-100, 1019}, {-125, 1016}, {-150, 1013}, {-175, 1009},
    {-200, 1004}, {-224,  999}, {-249,  993}, {-273,  987}, {-297,  980}, {-321,  972}, {-345,  964}, {-369,  955},
    {-392,  946}, {-415,  936}, {-438,  926}, {-460,  915}, {-483,  903}, {-505,  891}, {-526,  878}, {-548,  865},
    {-569,  851}, {-590,  837}, {-610,  822}, {-630,  807}, {-650,  792}, {-669,  775}, {-688,  759}, {-706,  742},
    {-724,  724}, {-742,  706}, {-759,  688}, {-775,  669}, {-792,  650}, {-807,  630}, {-822,  610}, {-837,  590},
    {-851,  569}, {-865,  548}, {-878,  526}, {-891,  505}, {-903,  483}, {-915,  460}, {-926,  438}, {-936,  415},
    {-946,  392}, {-955,  369}, {-964,  345}, {-972,  321}, {-980,  297}, {-987,  273}, {-993,  249}, {-999,  224},
    {-1004,  200}, {-1009,  175}, {-1013,  150}, {-1016,  125}, {-1019,  100}, {-1021,   75}, {-1023,   50}, {-1024,   25},
    {-1024,    0}, {-1024,  -25}, {-1023,  -50}, {-1021,  -75}, {-1019, -100}, {-1016, -125}, {-1013, -150}, {-1009, -175},
    {-1004, -200}, {-999, -224}, {-993, -249}, {-987, -273}, {-980, -297}, {-972, -321}, {-964, -345}, {-955, -369},
    {-946, -392}, {-936, -415}, {-926, -438}, {-915, -460}, {-903, -483}, {-891, -505}, {-878, -526}, {-865, -548},
    {-851, -569}, {-837, -590}, {-822, -610}, {-807, -630}, {-792, -650}, {-775, -669}, {-759, -688}, {-742, -706},
    {-724, -724}, {-706, -742}, {-688, -759}, {-669, -775}, {-650, -792}, {-630, -807}, {-610, -822}, {-590, -837},
    {-569, -851}, {-548, -865}, {-526, -878}, {-505, -891}, {-483, -903}, {-460, -915}, {-438, -926}, {-415, -936},
    {-392, -946}, {-369, -955}, {-345, -964}, {-321, -972}, {-297, -980}, {-273, -987}, {-249, -993}, {-224, -999},
    {-200, -1004}, {-175, -1009}, {-150, -1013}, {-125, -1016}, {-100, -1019}, { -75, -1021}, { -50, -1023}, { -25, -1024},
    {   0, -1024}, {  25, -1024}, {  50, -1023}, {  75, -1021}, { 100, -1019}, { 125, -1016}, { 150, -1013}, { 175, -1009},
    { 200, -1004}, { 224, -999}, { 249, -993}, { 273, -987}, { 297, -980}, { 321, -972}, { 345, -964}, { 369, -955},
    { 392, -946}, { 415, -936}, { 438, -926}, { 460, -915}, { 483, -903}, { 505, -891}, { 526, -878}, { 548, -865},
    { 569, -851}, { 590, -837}, { 610, -822}, { 630, -807}, { 650, -792}, { 669, -775}, { 688, -759}, { 706, -742},
    { 724, -724}, { 742, -706}, { 759, -688}, { 775, -669}, { 792, -650}, { 807, -630}, { 822, -610}, { 837, -590},
    { 851, -569}, { 865, -548}, { 878, -526}, { 891, -505}, { 903, -483}, { 915, -460}, { 926, -438}, { 936, -415},
    { 946, -392}, { 955, -369}, { 964, -345}, { 972, -321}, { 980, -297}, { 987, -273}, { 993, -249}, { 999, -224},
    {1004, -200}, {1009, -175}, {1013, -150}, {1016, -125}, {1019, -100}, {1021,  -75}, {1023,  -50}, {1024,  -25}   
};

const unsigned short ball[] = {
 0x0020, 0x0020, 0x0000, 0x0000, 0x0000, 0x0000, 0x0020, 0x0020, 0x0020, 0x0000, 0x0841, 0x20E2, 0x20E3, 0x0861, 0x0000, 0x0020,
 0x0000, 0x0861, 0x4A07, 0x4A28, 0x41A6, 0x3165, 0x0861, 0x0000, 0x0000, 0x31A6, 0x6B8F, 0x634E, 0x528A, 0x41A6, 0x18C3, 0x0000,
 0x0000, 0x4229, 0xA5D9, 0x84D5, 0x634E, 0x4A48, 0x18C2, 0x0000, 0x0000, 0x10A3, 0xAE19, 0xA5FA, 0x6BAF, 0x4A48, 0x0841, 0x0000,
 0x0020, 0x0000, 0x10C3, 0x424A, 0x39C7, 0x1082, 0x0000, 0x0020, 0x0020, 0x0020, 0x0000, 0x0000, 0x0000, 0x0000, 0x0020, 0x0020,
};

Ball::Ball(int32_t angle) 
{
    counter = 0;
    active = false;
    x = 64 * 256;
    y = 8 * 256;
    vx = angleTable[220][0];
    vy = angleTable[220][1]; 
    image = ball;
    h = 8;
    w = 8;
}

void Ball::moveBall(){

    x += vx; 
    y += vy; 
    if((x / 256) + 8 >= 128 || x <= 0){
        vx = -vx;
    }
    if((y / 256) + 8 >= 160 || y <= 0){
        vy = -vy;
    }
}

void Ball::reset(int32_t angle){
    active = false;
    vx = angleTable[10][0] / 256;
    vy = angleTable[10][1] / 256;    
}

bool Ball::getActive(){
    return active;
}

void Ball::setActive(){
    active = true;
}

void Ball::IncrementVY(){
    vy += 256;
}

void Ball::setCounter(int8_t val){
    counter = val;
}

int8_t Ball::getCounter(){
    return counter;
}

int32_t Ball::getX(){
    return x;
}

int32_t Ball::getY(){
    return y;
}

int16_t Ball::getW(){
    return w;
}
int16_t Ball::getH(){
    return h;
}

const uint16_t* Ball::getImage(){
    return image;
}