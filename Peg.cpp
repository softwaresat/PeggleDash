#include "Peg.h"
#include "GameObject.h"
#include <cstdint>
#include <iostream>



const unsigned short bluepeg[] = {
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x4080, 0x8121, 0xA181, 0xA1C1, 0x8981, 0x3880, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0820, 0x8101, 0xB9A1, 0xB1A1, 0xB181, 0xB1A1, 0xC201, 0xD261, 0x8141, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x8101, 0xB181, 0xA161, 0xA981, 0xA981, 0xA981, 0xA141, 0xA161, 0xD261, 0x8141, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x4880, 0xB9A1, 0xB1C1, 0xC241, 0xCA61, 0xCA41, 0xC201, 0xB9C1, 0xA981, 0xA141, 0xCA41, 0x3880, 0x0000, 0x0000,
 0x0000, 0x0000, 0x8921, 0xC201, 0xD2A1, 0xD301, 0xDB01, 0xD2E1, 0xD2A1, 0xC221, 0xB9E1, 0xA161, 0xB9C1, 0x7941, 0x0000, 0x0000,
 0x0000, 0x0800, 0xA9A1, 0xDAE2, 0xDBA2, 0xE3C2, 0xDBA2, 0xDB82, 0xDB21, 0xD2A1, 0xC221, 0xB1A1, 0xA961, 0x9141, 0x0000, 0x0000,
 0x0000, 0x0800, 0xB241, 0xE3E2, 0xE462, 0xECC3, 0xEC82, 0xE422, 0xDBA2, 0xDB01, 0xCA81, 0xB9C1, 0xA961, 0x8921, 0x0000, 0x0000,
 0x0000, 0x0000, 0xA221, 0xF4A3, 0xEDEB, 0xF584, 0xED63, 0xECC3, 0xE402, 0xDB62, 0xD2A1, 0xB9E1, 0xA961, 0x70E1, 0x0000, 0x0000,
 0x0000, 0x0000, 0x50E0, 0xF462, 0xEF18, 0xF6B2, 0xF562, 0xED23, 0xE462, 0xDB82, 0xD2C1, 0xB1E1, 0xB161, 0x4060, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0xA220, 0xFDEB, 0xF79D, 0xF670, 0xED23, 0xE482, 0xDB82, 0xCA81, 0xB9C1, 0x78E1, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x1000, 0xA240, 0xF507, 0xFDCC, 0xF4E4, 0xEC02, 0xDB02, 0xCA02, 0x8101, 0x1020, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0800, 0x50C0, 0xA200, 0xBA81, 0xB221, 0x9141, 0x4881, 0x0800, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0800, 0x0800, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
};

const unsigned short bluepeghit[] = {
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x1820, 0x38A0, 0x38A0, 0x1020, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x1820, 0x9A20, 0xE400, 0xF4A0, 0xF480, 0xE3C0, 0x89E0, 0x1000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x1820, 0xD360, 0xFDA1, 0xFE02, 0xFE03, 0xFDE2, 0xFDC2, 0xFD41, 0xC2E0, 0x1000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0xAA80, 0xFE02, 0xF644, 0xFEA6, 0xFEA6, 0xFEA6, 0xFE64, 0xF5E2, 0xFD81, 0x9200, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x2860, 0xF501, 0xFEA5, 0xFEE8, 0xFF2B, 0xFF2B, 0xFF0A, 0xFEC7, 0xFE65, 0xFE02, 0xEC00, 0x1820, 0x0000, 0x0000,
 0x0000, 0x0000, 0x5920, 0xFE03, 0xFEE8, 0xFF4D, 0xFF70, 0xFF70, 0xFF6F, 0xFF2B, 0xFEC7, 0xFE43, 0xFD01, 0x40C0, 0x0000, 0x0000,
 0x0820, 0x0000, 0x6140, 0xFE64, 0xFF0A, 0xFF70, 0xFFB3, 0xFFB3, 0xFF92, 0xFF6F, 0xFF09, 0xFE64, 0xFD41, 0x48E0, 0x0000, 0x0000,
 0x0000, 0x0000, 0x38A0, 0xFDE3, 0xFF4D, 0xFF92, 0xFFB3, 0xFFB4, 0xFF93, 0xFF70, 0xFF0A, 0xFE84, 0xF4C1, 0x2860, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0xCBC0, 0xFF8D, 0xFFDD, 0xFFB4, 0xFF92, 0xFF92, 0xFF4E, 0xFEC8, 0xFE83, 0xBB00, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x38A0, 0xF522, 0xFFB1, 0xFFB6, 0xFF2D, 0xFF2C, 0xFF09, 0xFEC5, 0xECA1, 0x3060, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x40A0, 0xD401, 0xFE45, 0xFEC6, 0xFEA5, 0xFE03, 0xD3C1, 0x38A0, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0800, 0x5100, 0x8200, 0x8200, 0x5100, 0x0800, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0820, 0x0820, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
};

const unsigned short orangepeg[] = {
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0067, 0x0110, 0x0174, 0x0174, 0x0130, 0x0067, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0001, 0x0110, 0x01D9, 0x01FA, 0x01DA, 0x01FA, 0x021B, 0x023B, 0x0130, 0x0001, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0110, 0x021B, 0x01F9, 0x021A, 0x021A, 0x01F9, 0x01B8, 0x01B8, 0x025C, 0x0130, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0088, 0x021B, 0x025A, 0x02BB, 0x02DC, 0x02BB, 0x029B, 0x025A, 0x01D8, 0x01B8, 0x023B, 0x0067, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0151, 0x02BC, 0x031C, 0x033C, 0x033C, 0x031C, 0x02DC, 0x02BB, 0x025B, 0x01B8, 0x01FA, 0x0130, 0x0000, 0x0000,
 0x0000, 0x0000, 0x01F6, 0x035D, 0x037C, 0x039D, 0x039D, 0x037C, 0x033C, 0x02DC, 0x029B, 0x01F9, 0x01D9, 0x0153, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0236, 0x039D, 0x03FD, 0x043D, 0x041D, 0x03DD, 0x037D, 0x031C, 0x02BB, 0x023A, 0x01D9, 0x0133, 0x0000, 0x0000,
 0x0000, 0x0000, 0x01B2, 0x03FE, 0x251E, 0x0CBE, 0x049E, 0x043D, 0x03BD, 0x033C, 0x02DC, 0x025A, 0x01D9, 0x00EF, 0x0000, 0x0000,
 0x0000, 0x0000, 0x00A9, 0x039D, 0x5DFE, 0x5E1E, 0x049E, 0x045D, 0x03DD, 0x035C, 0x02DC, 0x023A, 0x01B9, 0x0067, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x01B3, 0x1CBF, 0x8EBE, 0x5DFE, 0x045D, 0x03DD, 0x033C, 0x02BB, 0x023B, 0x0110, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0002, 0x01D3, 0x13FE, 0x2CFF, 0x041E, 0x037D, 0x02FD, 0x025C, 0x0132, 0x0022, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x00A9, 0x0193, 0x0216, 0x01F6, 0x0172, 0x00AA, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0001, 0x0001, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
};

const unsigned short orangepeghit[] = {
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0023, 0x00A7, 0x00A7, 0x0022, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0023, 0x0233, 0x041E, 0x04BF, 0x04BF, 0x03FD, 0x01F2, 0x0002, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0023, 0x037A, 0x05BF, 0x05BF, 0x05BF, 0x059F, 0x059F, 0x057F, 0x0319, 0x0002, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0295, 0x05FF, 0x05FE, 0x063F, 0x063F, 0x061F, 0x05DF, 0x059E, 0x057F, 0x0233, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0066, 0x04FF, 0x065F, 0x0E7F, 0x0EBF, 0x0EBF, 0x0E9F, 0x0E5F, 0x05FF, 0x05BF, 0x045E, 0x0024, 0x0000, 0x0000,
 0x0000, 0x0000, 0x012B, 0x05DF, 0x0E7F, 0x0EDF, 0x171F, 0x171F, 0x16FF, 0x0EBF, 0x065F, 0x05DF, 0x051F, 0x00C9, 0x0000, 0x0000,
 0x0000, 0x0000, 0x014C, 0x05FF, 0x0EBF, 0x0F1F, 0x173F, 0x173F, 0x171F, 0x0EDF, 0x0E7F, 0x05FF, 0x053F, 0x00EA, 0x0000, 0x0000,
 0x0000, 0x0000, 0x00A8, 0x059F, 0x1EFF, 0x273F, 0x0F5F, 0x175F, 0x173F, 0x0EFF, 0x0E7F, 0x061F, 0x04BF, 0x0066, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0399, 0x2F3F, 0x97DF, 0x375F, 0x0F3F, 0x171F, 0x0EBF, 0x063F, 0x061F, 0x0318, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x00A7, 0x04FE, 0x577F, 0x5F9F, 0x0EDF, 0x0EBF, 0x0E7F, 0x065F, 0x047E, 0x0087, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x00A8, 0x03FB, 0x05FF, 0x065F, 0x063F, 0x059F, 0x03BB, 0x00A8, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0001, 0x010A, 0x01F0, 0x01F0, 0x010A, 0x0001, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
};

Peg::Peg(int32_t x_pos, int32_t y_pos, int32_t initial_hits) : 
    GameObject(x_pos, y_pos, 16, 16, nullptr), 
    hits(initial_hits),
    prevScreenX(0),
    prevScreenY(0),
    needsRedraw(false) {
    
    // Set initial image based on hits
    updatePeg();
}

Peg::~Peg() {
    // Destructor for Peg (empty as we don't allocate additional resources)
}

void Peg::updatePeg() {
    if (hits <= 0) {
        // Peg is destroyed
        image = nullptr;
        // Optionally set width/height to 0 if it should disappear completely
        w = 0;
        h = 0;
    } else if (hits == 1) {
        // Blue peg (1 hit left)
        image = bluepeg;
    } else if (hits == 2) {
        // Orange peg (2 hits left)
        image = orangepeg;
    } else if (hits == 3) {
        // Special case for pegs with more than 2 hits (if implemented)
        image = orangepeg; // Use orange for now
    }
    
    needsRedraw = true; // Mark for redraw whenever state changes
}
